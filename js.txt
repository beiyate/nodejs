//js
'use strict'
var a;
var $b=1;
var s_007='007';
var Answer=true;
var t=null;
var arr=[1,2,3.14,'hhh',null,true]

//'你好'+name+‘了’===`你好，${name},了`
var s=‘hello, world!’;
s.length;//13
s[0];//'h';
s[13];//undefined
var s='hello';
alert(s);
s.toUpperCase();//'HELLO'
var arr=[1,2,3.14,'hhh',null,true];
arr.length;
var arr=['a','b','c'];
arr[1]=99;
var arr=[1,2,3];
arr[5]='x';
arr;//arr变为[1,2,3,undefined,undefined,'x']
arr.indexOf(1);
var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];
arr.slice(0, 3); // 从索引0开始，到索引3结束，但不包括索引3: ['A', 'B', 'C']
arr.slice(3); // 从索引3开始到结束: ['D', 'E', 'F', 'G']
var aCopy=arr.slice();
var arr=[1,2];
arr.push('a','b');
arr.pop();//arr=[1,2,'a'];
arr.pop(); // 空数组继续pop不会报错，而是返回undefined
arr.unshift('a','b');
arr.shift();//如果要往Array的头部添加若干元素，使用unshift()方法，shift()方法则把Array的第一个元素删掉
arr.sort();//排序
arr.reverse();
//splice()方法是修改Array的“万能方法”，它可以从指定的索引开始删除若干元素，然后再从该位置添加若干元素：
var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];
// 从索引2开始删除3个元素,然后再添加两个元素:
arr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']
arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']
// 只删除,不添加:
arr.splice(2, 2); // ['Google', 'Facebook']
arr; // ['Microsoft', 'Apple', 'Oracle']
// 只添加,不删除:
arr.splice(2, 0, 'Google', 'Facebook'); // 返回[],因为没有删除任何元素
arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']
var arr = ['A', 'B', 'C'];
var added = arr.concat([1, 2, 3]);
added; // ['A', 'B', 'C', 1, 2, 3]
arr; // ['A', 'B', 'C']
var arr = ['A', 'B', 'C'];
arr.concat(1, 2, [3, 4]); // ['A', 'B', 'C', 1, 2, 3, 4]
var arr = ['A', 'B', 'C', 1, 2, 3];
arr.join('-'); // 'A-B-C-1-2-3'
//对象
var xiaoming={
    name:'xiaoming',
    birth:1990,
    school:'no.1 middle school',
    height:1.70,
    weight:65,
    score:null,
    'm-school':'mmmmschool'    
};
xiaoming.name;//'xiaoming'
xiaoming['m-school'];//
'name' in xiaoming;
xiaoming.hasOwnProperty('name'); // true
xiaoming.hasOwnProperty('toString'); // false
var s='123';
if(s.length){
    //JavaScript把null、undefined、0、NaN和空字符串''视为false
    //其他值一概视为true，因此上述代码条件判断的结果是true。
}

//循环
var x=0;
var i;
for(i=1;i<=10000;i++){
    x=x+i;
}
x;

var x = 0;
for (;;) { //3个条件均可省略 将无限循环下去
    if (x > 100) {
        break; // 通过if判断来退出循环
    }
    x ++;
}

//for ... in
var o = {
    name: 'Jack',
    age: 20,
    city: 'Beijing'
};
for (var key in o) {
    console.log(key); // 'name', 'age', 'city'
}

var o = {
    name: 'Jack',
    age: 20,
    city: 'Beijing'
};
for (var key in o) {
    console.log(o[key]); // 'Jack', '20', 'Beijing'
}
//要过滤掉对象继承的属性，用hasOwnProperty()来实现
var o = {
    name: 'Jack',
    age: 20,
    city: 'Beijing'
};
for (var key in o) {
    if (o.hasOwnProperty(key)) {
        console.log(key); // 'name', 'age', 'city'
    }
}

var x = 0;
var n = 99;
while (n > 0) {
    x = x + n;
    n = n - 2;
}
x; // 2500

var n = 0;
do {
    n = n + 1;
} while (n < 100);
n; // 100
